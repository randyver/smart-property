"use strict";exports.id=350,exports.ids=[350],exports.modules={60350:(t,e,r)=>{r.d(e,{G8:()=>a,L9:()=>o,V3:()=>c,n9:()=>s});let i=process.env.NEXT_PUBLIC_API_URL||"http://localhost:5000";async function fetchFromAPI(t,e={}){try{let r=await fetch(`${i}${t}`,{...e,headers:{"Content-Type":"application/json",...e.headers}});if(!r.ok)throw Error(`HTTP error! status: ${r.status}`);let a=await r.text();try{let t=JSON.parse(a);return t}catch(t){throw console.error("Error parsing JSON:",t),console.error("Raw response:",a),Error("Failed to parse API response")}}catch(t){throw console.error("API request failed:",t),t}}let a={getProperties:async(t={})=>{let e=new URLSearchParams;Object.entries(t).forEach(([t,r])=>{null!=r&&""!==r&&e.append(t,String(r))});let r=e.toString()?`?${e.toString()}`:"";return fetchFromAPI(`/api/properties${r}`)},getProperty:async t=>fetchFromAPI(`/api/properties/${t}`),getBandungProperties:async()=>fetchFromAPI("/api/properties/bandung"),compareProperties:async t=>{let e=t.join(",");return fetchFromAPI(`/api/properties/compare?ids=${e}`)},getPropertyById:async t=>fetchFromAPI(`/api/properties/${t}`),predictPrice:async t=>fetchFromAPI("/api/price/predict",{method:"POST",body:JSON.stringify(t)})},o={getRiskLayers:async()=>fetchFromAPI("/api/climate/risk-layers"),getLocationScores:async(t,e)=>fetchFromAPI(`/api/climate/scores?lat=${t}&lng=${e}`)},s={getPriceByDistrict:async()=>fetchFromAPI("/api/analytics/price-by-district"),getClimateByDistrict:async()=>fetchFromAPI("/api/analytics/climate-by-district"),getPropertyDistribution:async()=>fetchFromAPI("/api/analytics/price-distribution"),getBedroomDistribution:async()=>fetchFromAPI("/api/analytics/bedroom-distribution"),getClimateImpact:async()=>fetchFromAPI("/api/analytics/climate-impact"),getDashboardSummary:async()=>fetchFromAPI("/api/analytics/dashboard-summary")},c={predictPrice:async t=>fetchFromAPI("/api/developer/predict-price",{method:"POST",body:JSON.stringify(t)})}}};